@model JsoftProject.Models.mstItemGroup

@{
    ViewBag.Title = "Update Item Group";
}

<h2>Update Item Group</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ItemGroupID)

    <div class="form-group">
        @Html.LabelFor(model => model.MetalType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.MetalType, new SelectList(ViewBag.Metals, "MetalType", "MetalTypeDesc"), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MetalType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GroupName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GroupName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GroupName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShortName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ShortName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ShortName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Touch, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Touch, new { htmlAttributes = new { @class = "form-control", @style = "text-align: right" } })
            @Html.ValidationMessageFor(model => model.Touch, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MesrUnitCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.MesrUnitCode, new SelectList(ViewBag.MesrUnits, "MesrUnitCode", "MesrUnitName"), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MesrUnitCode, "", new { @class = "text-danger" })
        </div>

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PurchaseRateType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.PurchaseRateType, new SelectList(ViewBag.PurchaseRates, "RateType", "RateTypeDesc"), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PurchaseRateType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SalesRateType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.SalesRateType, new SelectList(ViewBag.SalesRates, "RateType", "RateTypeDesc"), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SalesRateType, "", new { @class = "text-danger" })
        </div>
    </div>





    <div class="form-group">
        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    @Html.HiddenFor(model => model.AddBy)
    @Html.HiddenFor(model => model.AddDate)

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "ViewDetails", "MenuItemGroup", new { @class = "btn btn-success" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
